Programming Language - HW6
==========================

p. 438 n. 2 :
-------------
Q: In most Fortran IV implementations, parameters were passed by reference, 
using access path transmission only. State both the advantages and 
disadvantages of this design choice.

A: The advantage of passing everything by reference is that values are
   not copied on the stack, thus calls are efficients.
   In addition there is less type or type qualifier, hence making the program
   easiyer to read in that matter.
   In the other hand if parameters are reference, there could be a side-effect
   in a subroutine, which will be hardly noticeable and hard to debug
   That's why, overall, it hurts both readability and reliability.


p. 438 n. 4 :
-------------
Q: Suppose you want to write a method that prints a heading on a new output
page, along with a page number that is 1 in the first activation and
that increases by 1 with each subsequent activation. Can this be done
without parameters and without reference to nonlocal variables in Java?
Can it be done in C#?

A: It can't be done neither in Java nor in C#, because those two languages
don't support static local variable.


p. 438 n. 5 :
-------------
Q: For each of the following parameter-passing methods, what are all of the
values of the variables value and list after each of the three calls to
swap?
a. Passed by value
b. Passed by reference
c. Passed by value-result

A:
a. The variable is unchanged, as only a copy is touched in swap.
b. After the first call, value is '1'.
Second call don't change it, then third makes it take value '2' again.
c. It is the same as b. First it takes value '1', second call has no effect,
 then it finally takes value '2'.


p. 438 n. 7 :
-------------
Q: For each of the following parameter-passing methods, what are the values
of the list array after execution?
a. Passed by value
b. Passed by reference
c. Passed by value-result

A: After execution, list has value:
a. [1, 3];
b. [2, 6];
c. [2, 6];
